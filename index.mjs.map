{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name add\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/add}\n*/\nimport add from '@stdlib/complex-float64-base-add';\nsetReadOnly( ns, 'add', add );\n\n/**\n* @name assert\n* @memberof ns\n* @readonly\n* @type {Namespace}\n* @see {@link module:@stdlib/complex/float64/base/assert}\n*/\nimport assert from '@stdlib/complex-float64-base-assert';\nsetReadOnly( ns, 'assert', assert );\n\n/**\n* @name mul\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/mul}\n*/\nimport mul from '@stdlib/complex-float64-base-mul';\nsetReadOnly( ns, 'mul', mul );\n\n/**\n* @name muladd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/mul-add}\n*/\nimport muladd from '@stdlib/complex-float64-base-mul-add';\nsetReadOnly( ns, 'muladd', muladd );\n\n/**\n* @name scale\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/scale}\n*/\nimport scale from '@stdlib/complex-float64-base-scale';\nsetReadOnly( ns, 'scale', scale );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","add","assert","mul","muladd","scale"],"mappings":";;ynCAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,MAAAE,GAUAD,EAAAD,EAAA,SAAAG,GAUAF,EAAAD,EAAA,MAAAI,GAUAH,EAAAD,EAAA,SAAAK,GAUAJ,EAAAD,EAAA,QAAAM"}